---
title: "Making vector maps on the cheap"
categories: [dataviz, deckgl, mapping, maplibre]
date: 2022-07-10
description: Lessons from visualising tiled climate datasets with Leaflet
draft: true
---

<!-- TODO - nut graf -->

# Background

Let's start with some background.

Slippy maps: any kind of map that can be moved and panned around. The canonical example is Google Maps:

```{=html}
<iframe
  src="https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d15536931.227897573!2d134.30529097358698!3d-28.914131551783523!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sau!4v1660883555306!5m2!1sen!2sau"
  style="width: 100%; height: 400px; border:0;"
  allowfullscreen=""
  loading="lazy"
  referrerpolicy="no-referrer-when-downgrade"></iframe>
```

You can potentially go _anywhere_ on a slippy map. You can zoom in all the way from a global view to your house. That's amazing! But how do we get the whole world into someone's phone without it melting down?

## Tiled maps

The secret to making a slippy map performant - that is, to making it work quickly - is **tiling**. Tiling means that the map is broken up into chunks, or tiles, and those tiles are streamed i, or downloaded to the user, as it starts to come into view.

If you've ever seen squares of map appearing as you move or zoom, you've seen tiles streaming in.

Tiles aren't just of different parts of the world - they're also of different zoom levels. This means that a person can look at the entire world with just one, low-detail tile, but they can then zoom into a street view and get a tile that covers a few blocks with a lot of detail.

<!-- TODO - picture of map panning and network requests for tiles, plus previewing a tile -->

## Raster tiles

In the past, map tiles have been _rasters_: images like `.png` or `.jpg` files. These are easier to use because they're file formats we're already familiar with; all that's needed to turn a raster map of the world into a tiled map is to crop it into different tiles and then organise them using an agreed-upon structure.

Although that can theoretically be any map projection, any tile shape and any access scheme, there're a few commonalities we see in most maps:

* Most raster web maps use the [Web Mercator projection](https://en.wikipedia.org/wiki/Web_Mercator_projection), designated EPSG:3857. It's a square, which makes it really easy to tile: you just break each square into quarters each time you increase the zoom.
* The tiles have to be hosted somewhere on the Internet: a server. Mapping packages usually request individual tiles from a server using a URL scheme, like `{z}/{x}/{y}.png`. But how that URL is actually processed by a server could vary:
  - It could mean that the mapping package connects to a special tile server, like `https://tiles.example.com`, which receives a request like `5/4/3.png`, extracts the relevant parameters (zoom 5, x index 4, y index 3) and returns a tile. The advantage of runn
